name: Linux build

on:
  push:
  workflow_dispatch:
    inputs:
      packageRelease:
        description: 'Package binaries for release and upload them'
        required: false
        default: false

jobs:
  linux:
    name: Linux desktop (Qt ${{ matrix.qt-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        qt-version: ['6.2.3', '6.3.1']

    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt-version }}
          cache: true
          modules: 'qtnetworkauth'

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Build
        run: |
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_CXX_COMPILER=clang++ ..
          cmake --build . --config RelWithDebInfo
          cd ..

      # now we can deploy the release if necessary
      - name: Install LinuxDeploy
        if: ${{ github.event.inputs.packageRelease || startsWith(github.ref, 'refs/tags/v') }}
        uses: miurahr/install-linuxdeploy-action@v1
        with:
          plugins: qt appimage
          dir: ${{ github.workspace }}

      - name: Build release package
        if: ${{ github.event.inputs.packageRelease || startsWith(github.ref, 'refs/tags/v') }}
        run: |
          linuxdeploy-x86_64.AppImage --plugin qt --output appimage --desktop-file TimeLight.desktop --icon-file icons/TimeLight.svg --executable build/TimeLight --appdir AppDir

      - name: Upload release package
        if: ${{ github.event.inputs.packageRelease || startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v2
        with:
          name: Linux package (64-bit, Qt ${{ matrix.qt-version }})
          path: TimeLight-*-x86_64.AppImage
          retention-days: 7 # if it's needed more than a week later, we can just rerun the build manually
